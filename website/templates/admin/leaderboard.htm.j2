{% extends "base/body.htm.j2" %}


{% set page_title = "TCK - Leaderboard Admin" %}
{% set css_files = ["/css/admin-leaderboard.css"] %}
{% set current_page_url = "/admin/leaderboard" %}
{% set page_description = "" %}


{%- block content -%}
{% for i in leaderboard_items %}
    {% if i is none %}
        {% set i = {"index": loop.index0 + 1, "name": "", "amount": 0} %}
    {% endif %}
    <div class="leaderboard-item">
        <input
                type="hidden"
                name="item-data"
                data-index="{{ i.index }}"
                data-name="{{ i.name }}"
                data-amount="{{ i.amount }}" />
        <p>{{ i.index }}</p>
        <input
                type="text"
                name="name"
                value="{{ i.name }}"
                data-index="{{ i.index }}"
                placeholder="User's name"
                onchange="changeLeaderboardItemMeta('name', this)" />
        <input
                type="text"
                name="amount"
                step="0.01"
                min="0"
                value="{{ '%.2f'|format(i.amount / 100) }}"
                data-index="{{ i.index }}"
                placeholder="Amount of money (USD)"
                onchange="changeLeaderboardItemMeta('amount', this)" />
    </div>
{% endfor %}

<button onclick="submitChanges().then(alert)">Submit Changes</button>

<script type="text/javascript">
/**
 * Change the meta input for the leaderboard items.
 * */
function changeLeaderboardItemMeta(attr, inputNode) {
    let index = inputNode.dataset.index;
    let selector = `.leaderboard-item input[name="item-data"][data-index="${index}"]`;
    let meta = document.querySelector(selector);
    if(attr == 'amount') {
        meta.dataset[attr] = parseFloat(inputNode.value) * 100;
    }
    else {
        meta.dataset[attr] = inputNode.value;
    }
}


/**
 * Submit changes to the API.
 * */
async function submitChanges() {
    let rawSubmitData = document.querySelectorAll('.leaderboard-item input[name="item-data"]');
    let submitData = [];
    for(let i of rawSubmitData) {
        submitData.push({
            index: i.dataset.index,
            name: i.dataset.name,
            amount: i.dataset.amount,
        });
    }
    let site = await fetch(
        "/api/leaderboard",
        {
            method: "PUT",
            body: JSON.stringify(submitData),
        },
    );
    let json = await site.json();
    return json.message;
}
</script>
{%- endblock content -%}
